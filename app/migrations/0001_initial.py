# Generated by Django 3.1.4 on 2020-12-21 19:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Academiclevel',
            fields=[
                ('academiclevelid', models.AutoField(db_column='academicLevelId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'academiclevel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('addressid', models.AutoField(db_column='addressId', primary_key=True, serialize=False)),
                ('addressnametype', models.CharField(blank=True, db_column='addressNameType', max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city_addresscityid', models.IntegerField(db_column='City_addressCityId')),
                ('addressinfoadditional', models.CharField(blank=True, db_column='addressInfoAdditional', max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, max_length=10, null=True)),
                ('latitude', models.CharField(blank=True, max_length=10, null=True)),
                ('pluscodes', models.CharField(blank=True, db_column='plusCodes', max_length=10, null=True)),
                ('createdat', models.IntegerField(blank=True, db_column='createdAt', null=True)),
            ],
            options={
                'db_table': 'address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ambulancetogoservice',
            fields=[
                ('idambulancetogoservice', models.AutoField(db_column='idAmbulanceToGoService', primary_key=True, serialize=False)),
                ('ambulancetogoserviceaddress', models.CharField(blank=True, db_column='AmbulanceToGoServiceAddress', max_length=128, null=True)),
                ('ambulancetogoserviceuserphone', models.CharField(blank=True, db_column='AmbulanceToGoServiceUserPhone', max_length=45, null=True)),
                ('diasnoticimagesserviceusername', models.CharField(blank=True, db_column='diasnoticImagesServiceUserName', max_length=80, null=True)),
                ('diasnoticimagesserviceemail', models.CharField(blank=True, db_column='diasnoticImagesServiceEmail', max_length=128, null=True)),
                ('diasnoticimagesservicevalue', models.CharField(blank=True, db_column='diasnoticImagesServiceValue', max_length=45, null=True)),
            ],
            options={
                'db_table': 'ambulancetogoservice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ambulancetogoserviceplan',
            fields=[
                ('idambulancetogo', models.AutoField(db_column='idAmbulanceToGo', primary_key=True, serialize=False)),
                ('ambulancetogoservicename', models.CharField(blank=True, db_column='AmbulanceToGoServiceName', max_length=45, null=True)),
                ('ambulancetogoserviceurlimage', models.CharField(blank=True, db_column='AmbulanceToGoServiceUrlImage', max_length=255, null=True)),
                ('ambulancetogoserviceprice', models.CharField(blank=True, db_column='AmbulanceToGoServicePrice', max_length=45, null=True)),
            ],
            options={
                'db_table': 'ambulancetogoserviceplan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Appformulary',
            fields=[
                ('idappformulary', models.AutoField(db_column='idAppFormulary', primary_key=True, serialize=False)),
                ('appformularydescription', models.CharField(blank=True, db_column='AppFormularyDescription', max_length=80, null=True)),
                ('appformularypath', models.CharField(blank=True, db_column='AppFormularyPath', max_length=80, null=True)),
            ],
            options={
                'db_table': 'appformulary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assistant',
            fields=[
                ('assistantid', models.AutoField(db_column='assistantId', primary_key=True, serialize=False)),
                ('basicdatadocnumber', models.CharField(blank=True, db_column='basicDataDocNumber', max_length=15, null=True)),
                ('basicdatafirstname', models.CharField(blank=True, db_column='basicDataFirstName', max_length=50, null=True)),
                ('basicdatalastname', models.CharField(blank=True, db_column='basicDataLastName', max_length=50, null=True)),
                ('basicdataphoto', models.CharField(blank=True, db_column='basicDataPhoto', max_length=255, null=True)),
                ('personaldatatelephone', models.CharField(blank=True, db_column='personalDataTelephone', max_length=50, null=True)),
                ('personaldatacellphone', models.CharField(blank=True, db_column='personalDataCellphone', max_length=50, null=True)),
                ('personaldataaddress', models.CharField(blank=True, db_column='personalDataAddress', max_length=255, null=True)),
                ('personaldataaddresscomplement', models.CharField(blank=True, db_column='personalDataAddressComplement', max_length=255, null=True)),
                ('personaldataemailaddress', models.CharField(blank=True, db_column='personalDataEmailAddress', max_length=255, null=True)),
                ('personaldataaddresscity', models.CharField(blank=True, db_column='personalDataAddressCity', max_length=255, null=True)),
                ('personaldataaddresslocality', models.CharField(blank=True, db_column='personalDataAddressLocality', max_length=255, null=True)),
                ('basicdatabirthdate', models.DateField(blank=True, db_column='basicDataBirthDate', null=True)),
                ('basicdatabirthplacecity', models.CharField(blank=True, db_column='basicDataBirthPlaceCity', max_length=255, null=True)),
                ('socialbenefitsarl', models.CharField(blank=True, db_column='socialBenefitsARL', max_length=255, null=True)),
                ('socialbenefitshealth', models.CharField(blank=True, db_column='socialBenefitsHealth', max_length=255, null=True)),
                ('socialbenefitspension', models.CharField(blank=True, db_column='socialBenefitsPension', max_length=255, null=True)),
                ('professionaljobtitle', models.CharField(blank=True, db_column='professionalJobTitle', max_length=255, null=True)),
                ('professionalsalaryaspiration', models.IntegerField(blank=True, db_column='professionalSalaryAspiration', null=True)),
                ('professionalresume', models.CharField(blank=True, db_column='professionalResume', max_length=255, null=True)),
                ('paymentfifteen', models.IntegerField(blank=True, db_column='paymentFifteen', null=True)),
                ('professionalhvurl', models.CharField(blank=True, db_column='professionalHVUrl', max_length=255, null=True)),
                ('experiencemovility', models.IntegerField(blank=True, db_column='experienceMovility', null=True)),
                ('bossobservation', models.CharField(blank=True, db_column='bossObservation', max_length=255, null=True)),
                ('experiencecateter', models.IntegerField(blank=True, db_column='experienceCateter', null=True)),
                ('experiencetraqueo', models.IntegerField(blank=True, db_column='experienceTraqueo', null=True)),
                ('experienceintravain', models.IntegerField(blank=True, db_column='experienceIntraVain', null=True)),
                ('companybegindate', models.DateField(blank=True, db_column='companyBeginDate', null=True)),
                ('assistantregisterdate', models.DateTimeField(blank=True, db_column='assistantRegisterDate', null=True)),
                ('defaultworktime', models.CharField(blank=True, db_column='defaultWorkTime', max_length=255, null=True)),
                ('registeredbyuserid', models.IntegerField(blank=True, db_column='registeredByUserId', null=True)),
            ],
            options={
                'db_table': 'assistant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('idavailability', models.AutoField(db_column='idAvailability', primary_key=True, serialize=False)),
                ('availabilitydate', models.DateField(blank=True, db_column='AvailabilityDate', null=True)),
                ('availabilityjourney', models.CharField(blank=True, db_column='AvailabilityJourney', max_length=20, null=True)),
                ('availabilitystatus', models.CharField(blank=True, db_column='AvailabilityStatus', max_length=45, null=True)),
            ],
            options={
                'db_table': 'availability',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('avatarid', models.AutoField(db_column='avatarId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'avatar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cancellation',
            fields=[
                ('cancellationid', models.AutoField(db_column='cancellationId', primary_key=True, serialize=False)),
                ('cancellationdatetime', models.IntegerField(blank=True, db_column='cancellationDateTime', null=True)),
                ('cancellationnumweekiso', models.IntegerField(blank=True, db_column='cancellationNumWeekISO', null=True)),
                ('cancellationyear', models.IntegerField(blank=True, db_column='cancellationYear', null=True)),
            ],
            options={
                'db_table': 'cancellation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('idcity', models.AutoField(db_column='idCity', primary_key=True, serialize=False)),
                ('cityname', models.CharField(blank=True, db_column='CityName', max_length=64, null=True)),
                ('zipcode', models.IntegerField(blank=True, db_column='ZipCode', null=True)),
            ],
            options={
                'db_table': 'city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cityplanday',
            fields=[
                ('idcityplanday', models.AutoField(db_column='idCityPlanDay', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'cityplanday',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('companyid', models.AutoField(db_column='companyId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('nit', models.CharField(max_length=15, unique=True)),
                ('address', models.CharField(max_length=80)),
                ('contactphone', models.CharField(db_column='contactPhone', max_length=20)),
                ('contactname', models.CharField(db_column='contactName', max_length=255)),
                ('contactemail', models.CharField(db_column='contactEmail', max_length=80)),
                ('imageurl', models.CharField(db_column='imageUrl', max_length=255)),
                ('ruturl', models.CharField(db_column='rutURL', max_length=255)),
                ('imageappdisabled', models.CharField(blank=True, db_column='imageAppDisabled', max_length=255, null=True)),
                ('imageappenabled', models.CharField(blank=True, db_column='imageAppEnabled', max_length=255, null=True)),
                ('commissionpercent', models.IntegerField(blank=True, db_column='commissionPercent', null=True)),
                ('cityid', models.IntegerField(blank=True, db_column='CityId', null=True)),
                ('companyimportance', models.IntegerField(blank=True, db_column='CompanyImportance', null=True)),
            ],
            options={
                'db_table': 'company',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyCity',
            fields=[
                ('companycityid', models.AutoField(db_column='companyCityId', primary_key=True, serialize=False)),
                ('city_idcity', models.IntegerField(db_column='City_idCity')),
                ('company_companyid', models.IntegerField(db_column='Company_companyId')),
                ('deliveryvalue', models.IntegerField(blank=True, db_column='DeliveryValue', null=True)),
            ],
            options={
                'db_table': 'company_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Companytype',
            fields=[
                ('idcompanytype', models.AutoField(db_column='idcompanyType', primary_key=True, serialize=False)),
                ('companytypedescription', models.CharField(blank=True, db_column='companyTypeDescription', max_length=45, null=True)),
                ('companytypeimageurl', models.CharField(blank=True, db_column='companyTypeImageUrl', max_length=255, null=True)),
            ],
            options={
                'db_table': 'companytype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('idcountry', models.AutoField(db_column='idCountry', primary_key=True, serialize=False)),
                ('countryname', models.CharField(blank=True, db_column='CountryName', max_length=80, null=True)),
            ],
            options={
                'db_table': 'country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('couponid', models.AutoField(db_column='couponId', primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('createddatetime', models.IntegerField(blank=True, db_column='createdDateTime', null=True)),
                ('expireddatetime', models.IntegerField(blank=True, db_column='expiredDateTime', null=True)),
            ],
            options={
                'db_table': 'coupon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Currencycode',
            fields=[
                ('currencycodeid', models.AutoField(db_column='currencyCodeId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'currencycode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('deviceid', models.AutoField(db_column='deviceId', primary_key=True, serialize=False)),
                ('user_userid', models.IntegerField(db_column='User_userId')),
                ('uuid', models.CharField(db_column='UUID', max_length=100, unique=True)),
                ('statusdevice_statusdeviceid', models.IntegerField(db_column='StatusDevice_statusDeviceId')),
                ('subscriptiondatetime', models.IntegerField(blank=True, db_column='subscriptionDateTime', null=True)),
                ('lastconnectiondatetime', models.IntegerField(blank=True, db_column='lastConnectionDateTime', null=True)),
            ],
            options={
                'db_table': 'device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deviceos',
            fields=[
                ('deviceosid', models.AutoField(db_column='deviceOSId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'deviceos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Diasnoticimagesservice',
            fields=[
                ('iddiasnoticimagesservice', models.AutoField(db_column='iddiasnoticImagesService', primary_key=True, serialize=False)),
                ('diasnoticimagesserviceaddress', models.CharField(blank=True, db_column='diasnoticImagesServiceAddress', max_length=128, null=True)),
                ('diasnoticimagesserviceuserphone', models.CharField(blank=True, db_column='diasnoticImagesServiceUserPhone', max_length=45, null=True)),
                ('diasnoticimagesserviceusername', models.CharField(blank=True, db_column='diasnoticImagesServiceUserName', max_length=80, null=True)),
                ('diasnoticimagesserviceemail', models.CharField(blank=True, db_column='diasnoticImagesServiceEmail', max_length=128, null=True)),
                ('diasnoticimagesservicevalue', models.CharField(blank=True, db_column='diasnoticImagesServiceValue', max_length=45, null=True)),
            ],
            options={
                'db_table': 'diasnoticimagesservice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Diasnoticimagesserviceplan',
            fields=[
                ('iddiasnoticimagesserviceplan', models.AutoField(db_column='iddiasnoticImagesServicePlan', primary_key=True, serialize=False)),
                ('diasnoticimagesserviceplandescription', models.CharField(blank=True, db_column='diasnoticImagesServicePlanDescription', max_length=80, null=True)),
                ('diasnoticimagesserviceplanvalue', models.CharField(blank=True, db_column='diasnoticImagesServicePlanValue', max_length=45, null=True)),
            ],
            options={
                'db_table': 'diasnoticimagesserviceplan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Doctype',
            fields=[
                ('doctypeid', models.AutoField(db_column='docTypeId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'doctype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('memberid', models.AutoField(db_column='memberId', primary_key=True, serialize=False)),
                ('user_userid', models.IntegerField(db_column='User_userId')),
                ('relationship_accountrelationshipid', models.IntegerField(db_column='Relationship_accountRelationshipId')),
                ('basicdatabirthdate', models.DateField(blank=True, db_column='basicDataBirthDate', null=True)),
                ('basicdatadisability', models.CharField(blank=True, db_column='basicDataDisability', max_length=100, null=True)),
                ('doctype_doctypeid', models.IntegerField(db_column='DocType_docTypeId')),
                ('basicdatadocnumber', models.CharField(blank=True, db_column='basicDataDocNumber', max_length=15, null=True, unique=True)),
                ('basicdatafirstname', models.CharField(blank=True, db_column='basicDataFirstName', max_length=100, null=True)),
                ('basicdatalastname', models.CharField(blank=True, db_column='basicDataLastName', max_length=100, null=True)),
                ('sex_sexid', models.IntegerField(db_column='Sex_sexId')),
                ('mobility_basicdatamobiilityid', models.IntegerField(db_column='Mobility_basicDataMobiilityId')),
                ('basicdataheight', models.CharField(blank=True, db_column='basicDataHeight', max_length=3, null=True)),
                ('basicdataweight', models.CharField(blank=True, db_column='basicDataWeight', max_length=3, null=True)),
                ('personaldatacellphone', models.CharField(blank=True, db_column='personalDataCellphone', max_length=15, null=True)),
                ('emergencycontactcellphone', models.CharField(blank=True, db_column='emergencyContactCellphone', max_length=15, null=True)),
                ('emergencycontactnameperson', models.CharField(blank=True, db_column='emergencyContactNamePerson', max_length=100, null=True)),
                ('userepsname', models.CharField(blank=True, db_column='userEpsName', max_length=100, null=True)),
                ('userobservations', models.CharField(blank=True, db_column='userObservations', max_length=255, null=True)),
                ('statususer_statususerid', models.IntegerField(db_column='StatusUser_statusUserId')),
                ('rol_rolid', models.IntegerField(db_column='Rol_rolId')),
                ('avatar_avatarid', models.IntegerField(db_column='Avatar_avatarId')),
                ('relationship_emergencycontactrelationshipid', models.IntegerField(db_column='Relationship_emergencyContactRelationshipId')),
                ('userallergies', models.CharField(blank=True, db_column='userAllergies', max_length=255, null=True)),
                ('usermedicines', models.CharField(blank=True, db_column='userMedicines', max_length=255, null=True)),
            ],
            options={
                'db_table': 'family',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('frequencyid', models.AutoField(db_column='frequencyId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'frequency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('holidayid', models.AutoField(db_column='HolidayId', primary_key=True, serialize=False)),
                ('holidaydate', models.DateField(db_column='HolidayDate')),
                ('country_idcountry', models.IntegerField(db_column='Country_idCountry')),
            ],
            options={
                'db_table': 'holiday',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Messagechat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sendeddatetime', models.IntegerField(blank=True, db_column='sendedDateTime', null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('seen', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'messagechat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Messagesupport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sendeddatetime', models.IntegerField(blank=True, db_column='sendedDateTime', null=True)),
                ('seen', models.IntegerField(blank=True, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'messagesupport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mobility',
            fields=[
                ('mobilityid', models.AutoField(db_column='mobilityId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'mobility',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notificationid', models.AutoField(db_column='notificationId', primary_key=True, serialize=False)),
                ('user_userid', models.IntegerField(db_column='User_userId')),
                ('sendeddatetime', models.IntegerField(blank=True, db_column='sendedDateTime', null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('imagepath', models.TextField(blank=True, db_column='imagePath', null=True)),
                ('lanuchurl', models.TextField(blank=True, db_column='lanuchURL', null=True)),
                ('additionaldata', models.TextField(blank=True, db_column='additionalData', null=True)),
                ('actionsbuttons', models.TextField(blank=True, db_column='actionsButtons', null=True)),
                ('seen', models.IntegerField(blank=True, null=True)),
                ('uuidnotification', models.CharField(blank=True, db_column='UUIDNotification', max_length=255, null=True)),
                ('typenotification_typenotificationid', models.IntegerField(db_column='TypeNotification_typeNotificationId')),
            ],
            options={
                'db_table': 'notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('permissionid', models.AutoField(db_column='PermissionId', primary_key=True, serialize=False)),
                ('permissionname', models.CharField(db_column='PermissionName', max_length=64)),
            ],
            options={
                'db_table': 'permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pillbox',
            fields=[
                ('pillboxid', models.AutoField(db_column='pillboxId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.CharField(blank=True, max_length=50, null=True)),
                ('frequency', models.IntegerField(blank=True, null=True)),
                ('typepillbox', models.CharField(blank=True, db_column='typePillbox', max_length=10, null=True)),
                ('family_familyid', models.IntegerField(db_column='Family_familyId')),
                ('frequency_frequencyid', models.IntegerField(blank=True, db_column='Frequency_frequencyId', null=True)),
                ('typepillbox_typepillboxid', models.IntegerField(blank=True, db_column='TypePillbox_typePillboxId', null=True)),
                ('startedat', models.TimeField(blank=True, db_column='startedAt', null=True)),
            ],
            options={
                'db_table': 'pillbox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('idplan', models.AutoField(db_column='idPlan', primary_key=True, serialize=False)),
                ('planname', models.CharField(blank=True, db_column='PlanName', max_length=64, null=True)),
                ('pacientsammount', models.IntegerField(db_column='PacientsAmmount')),
                ('holidayprice', models.IntegerField(blank=True, db_column='HolidayPrice', null=True)),
                ('workdayprice', models.IntegerField(blank=True, db_column='WorkDayPrice', null=True)),
                ('companyid', models.IntegerField(blank=True, db_column='companyId', null=True)),
            ],
            options={
                'db_table': 'plan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plandays',
            fields=[
                ('idplandays', models.AutoField(db_column='idPlanDays', primary_key=True, serialize=False)),
                ('cardinality', models.CharField(blank=True, db_column='Cardinality', max_length=45, null=True)),
            ],
            options={
                'db_table': 'plandays',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlanHasPlandays',
            fields=[
                ('idplanhasdays', models.AutoField(db_column='IdPlanHasDays', primary_key=True, serialize=False)),
                ('numberofdays', models.IntegerField(db_column='NumberOfDays')),
            ],
            options={
                'db_table': 'plan_has_plandays',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productid', models.AutoField(db_column='productId', primary_key=True, serialize=False)),
                ('nameproduct', models.CharField(db_column='nameProduct', max_length=255)),
                ('imageurl', models.CharField(db_column='ImageUrl', max_length=255)),
                ('costproduct', models.IntegerField(blank=True, db_column='costProduct', null=True)),
                ('disccount', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('eancode', models.CharField(blank=True, db_column='EanCode', max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Productspayment',
            fields=[
                ('idproductspayment', models.AutoField(db_column='idproductsPayment', primary_key=True, serialize=False)),
                ('paymentusername', models.CharField(blank=True, db_column='paymentUserName', max_length=80, null=True)),
                ('paymentuseremail', models.CharField(blank=True, db_column='paymentUserEmail', max_length=80, null=True)),
                ('paymentaddress', models.CharField(blank=True, db_column='paymentAddress', max_length=128, null=True)),
                ('paymentzipcode', models.CharField(blank=True, db_column='paymentZipCode', max_length=6, null=True)),
                ('paymentvalue', models.CharField(blank=True, db_column='paymentValue', max_length=80, null=True)),
                ('paymentdeliveryvalue', models.CharField(blank=True, db_column='paymentDeliveryValue', max_length=80, null=True)),
                ('paymentorderdate', models.DateTimeField(blank=True, db_column='PaymentOrderDate', null=True)),
                ('paymentphonenumber', models.CharField(blank=True, db_column='PaymentPhoneNumber', max_length=50, null=True)),
                ('paymentuserdocument', models.CharField(blank=True, db_column='PaymentUserDocument', max_length=50, null=True)),
            ],
            options={
                'db_table': 'productspayment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Productstatus',
            fields=[
                ('idproductstatus', models.IntegerField(db_column='idProductStatus', primary_key=True, serialize=False)),
                ('productstatusdescription', models.CharField(blank=True, db_column='productStatusDescription', max_length=50, null=True)),
            ],
            options={
                'db_table': 'productstatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Professionalspecialty',
            fields=[
                ('professionalspecialtyid', models.AutoField(db_column='professionalSpecialtyId', primary_key=True, serialize=False)),
                ('specialtyname', models.CharField(blank=True, db_column='SpecialtyName', max_length=255, null=True)),
                ('specialtyyearsexperience', models.IntegerField(blank=True, db_column='SpecialtyYearsExperience', null=True)),
                ('assistantprofessionaljobtitle', models.CharField(blank=True, db_column='AssistantprofessionalJobTitle', max_length=255, null=True)),
            ],
            options={
                'db_table': 'professionalspecialty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Provieded',
            fields=[
                ('proviededid', models.AutoField(db_column='proviededId', primary_key=True, serialize=False)),
                ('servicedatetimeontheroadstarted', models.IntegerField(blank=True, db_column='serviceDateTimeOnTheRoadStarted', null=True)),
                ('servicelatepenalty', models.IntegerField(blank=True, db_column='serviceLatePenalty', null=True)),
                ('servicenumweekiso', models.IntegerField(blank=True, db_column='serviceNumWeekISO', null=True)),
                ('servicedatetimearrival', models.IntegerField(blank=True, db_column='serviceDateTimeArrival', null=True)),
                ('servicedatetimedeparture', models.IntegerField(blank=True, db_column='serviceDateTimeDeparture', null=True)),
                ('servicerequestpayforassistant', models.IntegerField(blank=True, db_column='serviceRequestPayForAssistant', null=True)),
                ('servicerequestpenaltycost', models.IntegerField(blank=True, db_column='serviceRequestPenaltyCost', null=True)),
                ('serviceyear', models.IntegerField(blank=True, db_column='serviceYear', null=True)),
                ('controlobservations', models.CharField(blank=True, db_column='controlObservations', max_length=255, null=True)),
            ],
            options={
                'db_table': 'provieded',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Purchaseorder',
            fields=[
                ('purchaseorderid', models.AutoField(db_column='purchaseOrderId', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('producttotalamount', models.IntegerField(blank=True, db_column='productTotalAmount', null=True)),
                ('temp_address', models.CharField(blank=True, max_length=255, null=True)),
                ('temp_addressinfo', models.CharField(blank=True, db_column='temp_addressInfo', max_length=255, null=True)),
                ('purchaseorderdatetime', models.IntegerField(blank=True, db_column='purchaseOrderDateTime', null=True)),
            ],
            options={
                'db_table': 'purchaseorder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('relationshipid', models.AutoField(db_column='relationshipId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'relationship',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('requestid', models.AutoField(db_column='requestId', primary_key=True, serialize=False)),
                ('statusservice_servicestatusid', models.IntegerField(db_column='StatusService_serviceStatusId')),
                ('family_userserviceid', models.IntegerField(db_column='Family_userServiceId')),
                ('statusservice', models.IntegerField(db_column='StatusService')),
                ('address_addressid', models.IntegerField(blank=True, db_column='Address_addressId', null=True)),
                ('requestdatetime', models.IntegerField(blank=True, db_column='requestDateTime', null=True)),
                ('servicedatetimestart', models.DateField(blank=True, db_column='serviceDateTimeStart', null=True)),
                ('servicedatetimeend', models.DateField(blank=True, db_column='serviceDateTimeEnd', null=True)),
                ('servicemeridian', models.CharField(blank=True, db_column='serviceMeridian', max_length=45, null=True)),
                ('servicetotalamount', models.IntegerField(blank=True, db_column='serviceTotalAmount', null=True)),
                ('currencycode_servicetotalamountcurrencycode', models.IntegerField(db_column='CurrencyCode_serviceTotalAmountCurrencyCode')),
                ('userrequestobservations', models.CharField(blank=True, db_column='userRequestObservations', max_length=255, null=True)),
                ('temp_address', models.CharField(blank=True, max_length=255, null=True)),
                ('temp_addressinfo', models.CharField(blank=True, db_column='temp_addressInfo', max_length=255, null=True)),
                ('transactionpaymentgateway_transactionpaymentgatewayid', models.IntegerField(blank=True, db_column='TransactionPaymentGateway_transactionPaymentGatewayId', null=True)),
                ('planname', models.CharField(blank=True, db_column='PlanName', max_length=255, null=True)),
            ],
            options={
                'db_table': 'request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('rolid', models.AutoField(db_column='rolId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'rol',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rolpermission',
            fields=[
                ('rolpermissionid', models.AutoField(db_column='RolPermissionId', primary_key=True, serialize=False)),
                ('permissionid', models.IntegerField(db_column='PermissionId')),
                ('rolid', models.IntegerField(db_column='RolId')),
                ('create', models.IntegerField(db_column='Create')),
                ('read', models.IntegerField(db_column='Read')),
                ('update', models.IntegerField(db_column='Update')),
                ('delete', models.IntegerField(db_column='Delete')),
            ],
            options={
                'db_table': 'rolpermission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roomchat',
            fields=[
                ('roomchatid', models.AutoField(db_column='roomChatId', primary_key=True, serialize=False)),
                ('roomdatetimestarted', models.IntegerField(blank=True, db_column='roomDateTimeStarted', null=True)),
            ],
            options={
                'db_table': 'roomchat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('serviceid', models.AutoField(db_column='serviceId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('costamount', models.IntegerField(blank=True, db_column='costAmount', null=True)),
                ('servicedetail', models.CharField(blank=True, db_column='serviceDetail', max_length=255, null=True)),
                ('isdayholiday', models.IntegerField(blank=True, db_column='isDayHoliday', null=True)),
                ('durationservice', models.IntegerField(blank=True, db_column='durationService', null=True)),
                ('serviceimageurl', models.CharField(blank=True, db_column='ServiceImageURL', max_length=255, null=True)),
            ],
            options={
                'db_table': 'service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('sexid', models.AutoField(db_column='sexId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'sex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('idstate', models.AutoField(db_column='idState', primary_key=True, serialize=False)),
                ('statename', models.CharField(blank=True, db_column='StateName', max_length=80, null=True)),
            ],
            options={
                'db_table': 'state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statusaddress',
            fields=[
                ('statusaddressid', models.AutoField(db_column='statusAddressId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'statusaddress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statuscompany',
            fields=[
                ('statuscompanyid', models.AutoField(db_column='statusCompanyId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'statuscompany',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statuscoupon',
            fields=[
                ('statuscouponid', models.AutoField(db_column='statusCouponId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'statuscoupon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statusdevice',
            fields=[
                ('statusdeviceid', models.AutoField(db_column='StatusDeviceId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'statusdevice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statuspayment',
            fields=[
                ('statuspaymentid', models.AutoField(db_column='statusPaymentId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'statuspayment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statusroomchat',
            fields=[
                ('statusroomchatid', models.AutoField(db_column='statusRoomChatId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'statusroomchat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statusservice',
            fields=[
                ('statusserviceid', models.AutoField(db_column='statusServiceId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('namedisplay', models.CharField(blank=True, db_column='nameDisplay', max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'statusservice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statususer',
            fields=[
                ('statususerid', models.AutoField(db_column='statusUserId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'statususer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('supportid', models.AutoField(db_column='supportId', primary_key=True, serialize=False)),
                ('supportdatetimestarted', models.IntegerField(blank=True, db_column='supportDateTimeStarted', null=True)),
            ],
            options={
                'db_table': 'support',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysConfig',
            fields=[
                ('variable', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=128, null=True)),
                ('set_time', models.DateTimeField(blank=True, null=True)),
                ('set_by', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'sys_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transactionpaymentgateway',
            fields=[
                ('transactionpaymentgatewayid', models.AutoField(db_column='transactionPaymentGatewayId', primary_key=True, serialize=False)),
                ('refnumber', models.CharField(db_column='refNumber', max_length=20)),
                ('orderidentifier', models.CharField(db_column='orderIdentifier', max_length=50)),
                ('creationdatetime', models.IntegerField(db_column='creationDateTime')),
                ('updatedatetime', models.IntegerField(blank=True, db_column='updateDateTime', null=True)),
                ('orderdescription', models.CharField(blank=True, db_column='orderDescription', max_length=255, null=True)),
                ('method', models.CharField(blank=True, max_length=20, null=True)),
                ('checkouturl', models.TextField(db_column='checkoutURL')),
            ],
            options={
                'db_table': 'transactionpaymentgateway',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Typenotification',
            fields=[
                ('typenotificationid', models.AutoField(db_column='typeNotificationId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'typenotification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Typepillbox',
            fields=[
                ('typepillboxid', models.AutoField(db_column='typePillboxId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'typepillbox',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Typeproduct',
            fields=[
                ('typeproductid', models.AutoField(db_column='typeProductId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'typeproduct',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Typeservice',
            fields=[
                ('typeserviceid', models.AutoField(db_column='typeServiceId', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'typeservice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.AutoField(db_column='userId', primary_key=True, serialize=False)),
                ('lastconnectiondatetime', models.IntegerField(blank=True, db_column='lastConnectionDateTime', null=True)),
                ('userdocnumber', models.CharField(blank=True, db_column='userDocNumber', max_length=15, null=True)),
                ('accountemail', models.CharField(db_column='accountEmail', max_length=255, unique=True)),
                ('accountpassword', models.CharField(blank=True, db_column='accountPassword', max_length=255, null=True)),
                ('accountcellphone', models.CharField(blank=True, db_column='accountCellphone', max_length=15, null=True, unique=True)),
                ('accountname', models.CharField(db_column='accountName', max_length=255)),
                ('isemailverified', models.IntegerField(blank=True, db_column='isEmailVerified', null=True)),
                ('isnewuser', models.IntegerField(blank=True, db_column='isNewUser', null=True)),
                ('isonline', models.IntegerField(blank=True, db_column='isOnline', null=True)),
                ('photourl', models.CharField(blank=True, db_column='photoURL', max_length=255, null=True)),
                ('tokenfacebook', models.CharField(blank=True, db_column='tokenFacebook', max_length=255, null=True)),
                ('tokengoogle', models.CharField(blank=True, db_column='tokenGoogle', max_length=255, null=True)),
                ('tokenapple', models.CharField(blank=True, db_column='tokenApple', max_length=255, null=True)),
                ('createdat', models.IntegerField(blank=True, db_column='createdAt', null=True)),
                ('updatedat', models.IntegerField(blank=True, db_column='updatedAt', null=True)),
                ('temppasswordtoken', models.CharField(blank=True, db_column='tempPasswordToken', max_length=255, null=True)),
                ('tokenpasswordexpiredat', models.IntegerField(blank=True, db_column='tokenPasswordExpiredAt', null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceNotification',
            fields=[
                ('deviceid', models.OneToOneField(db_column='Deviceid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app.device')),
            ],
            options={
                'db_table': 'device_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductspaymentHasProduct',
            fields=[
                ('productspayment_idproductspayment', models.OneToOneField(db_column='productsPayment_idproductsPayment', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app.productspayment')),
                ('productcount', models.CharField(blank=True, db_column='productCount', max_length=45, null=True)),
                ('productammount', models.FloatField(blank=True, db_column='productAmmount', null=True)),
            ],
            options={
                'db_table': 'productspayment_has_product',
                'managed': False,
            },
        ),
    ]
